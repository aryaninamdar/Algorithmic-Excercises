# -*- coding: utf-8 -*-
"""Deriving and working with prime factors from large numbers

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x1r971D1yVIqX67zfOzqdFT7tYO9fSba
"""

# Problem 1
print("Problem #1")
n = 10001
prime_numbers = [2,3]
i=3
while (True):
  i+=1
  isPrime = True
  for j in range(2,int(i/2)+1):
    if (i%j==0):
        isPrime = False
        break
    if (isPrime==True):
        prime_numbers.append(i)
    if (len(prime_numbers)==n):
      break
print(n,'th Prime Number is :', prime_numbers[n-1])


# Problem 2
print("Problem #2")
num = 24036583
for i in range(2, num//2):
  if (num % i) == 0:
    print(num, "is not a prime number")
    break
  else:
    print(num, "is a prime number")
    break

# Problem 3
print("Problem 3")
listOfPrimeFactors = []
listOfCompositeFactors = []
print("The prime factors of 600851475143 are:")
# from nums 1 - 600851475143
for i in range (1, 600851475143 + 1):
  # if 600851475143. is divisible by num
  if 600851475143 % i == 0:
    for j in range (2, 600851475142):
      if (i % j == 0):
        listOfCompositeFactors.append(i)
      else:
        listOfPrimeFactors.append(i)
print(listOfPrimeFactors)

# Problem 4
print("Problem 4")
print("The factors of 123456789 are:")
# from nums 1 - 123456789
for i in range (1, 123456789 + 1):
  # if 123456789 is divisible by num
  if 123456789 % i == 0:
    print(i)


# Problem 5
print("\nProblem 5")
total = 0
print("The sum of the factors of 123456789 is:")
# from nums 1 - 123456789
for i in range (1, 123456789 + 1):
  # if 123456789 is divisible by num
  if 123456789 % i == 0:
    # add num to total
    total = i + total
print(total)